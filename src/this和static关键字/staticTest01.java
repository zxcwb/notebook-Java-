package this和static关键字;
/*
static:
1、static翻译为“静态”
2、所有static修饰的都是类相关的，类级别的
3、所有static修饰的，都采用“类名.”的方式访问
4、static修饰的变量：静态变量
5、static修饰的方法：静态方法

变量的分类：
根据声明的位置进行划分：
在方法体当中声明的变量叫做:局部变量。
在方法体外声明的变量叫成员变量。
成员变量可以分为：
静态变量
实例变量

实例的一定需要使用“引用.”来访问
静态的：
建议使用类名.来访问，使用引用.来访问也行，但是这样写会遭到暴打

空指针只有在“空引用”访问“实例”相关，都会出现空指针异常NullPointerException

 什么时候定义实例方法，什么时候定义静态方法
 实例方法：
 此方法描述了一个行为，必须由对象去触发
 在方法体当中直接访问了实例变量，这个方法一定是实例方法

注意：
使用工具类，工具类上的方法一般都是静态的，不需要new对象，直接“类名.”来访问

 类 = 属性+方法
 属性：描述状态
 方法：行为动作

 静态代码块：
 static{
 Java语句；
 }
 静态代码块在类加载时执行，并且只执行一次，在main方法执行前执行
 静态代码都是遵循自上而下顺序执行

 栈：方法只要执行，会压栈。（局部变量）
	堆：new出来的对象都在堆中。垃圾回收器主要针对。（实例变量）
	方法区：类的信息，字节码信息，代码片段。（静态变量）

	方法的代码片段放在方法区，但是方法执行过程当中需要的内存在栈中。
 */

public class staticTest01 {
    public static void main(String[] args) {

    }
}
